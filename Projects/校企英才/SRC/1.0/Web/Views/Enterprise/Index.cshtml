@using Webdiyer.WebControls.Mvc;
@using HiLand.General.Entity;
@using HiLand.Utility4.MVC;
@using HiLand.General;
@using HiLand.Utility4.MVC.Data;
@using HiLand.Utility4.MVC.Controls;
@using HiLand.Framework.BusinessCore;
@using HiLand.Framework4.Permission.Controls;
@using HiLand.Utility.Data;
@using XQYC.Business.Entity;
@using XQYC.Web.Models;
@using HiLand.Utility.Enums;
@using System.Web.UI.WebControls;
@using HiLand.General.BLL;

@model PagedList<EnterpriseEntity>
@{
    ViewBag.Title = "Index";

    string currentUrl = HiLand.Utility.Web.RequestHelper.CurrentFullUrl;
    bool isUsingCompress = false;
    if (currentUrl.Length > 512)
    {
        isUsingCompress = true;
        currentUrl = CompressHelper.Compress(currentUrl);
    }

    List<AreaEntity> areaList = XQYC.Web.Control.HtmlHelperEx.XQYCItemsArea();
    List<ListItem> areaItemList = new List<ListItem>();
    areaItemList.Add(new ListItem("Please Choose", ""));
    foreach (AreaEntity item in areaList)
    {
        areaItemList.Add(new ListItem(item.AreaName, item.AreaCode));
    }

    List<BasicSettingEntity> industryTypeList = BasicSettingBLL.Instance.GetListOfIndustryType();
    List<ListItem> industryTypeItemList = new List<ListItem>();
    industryTypeItemList.Add(new ListItem("Please Choose", ""));
    for (int i = 0; i < industryTypeList.Count; i++)
    {
        BasicSettingEntity industryTypeItem = industryTypeList[i];
        ListItem listItem = new ListItem();
        listItem.Text = industryTypeItem.DisplayName;
        listItem.Value = industryTypeItem.SettingKey;

        industryTypeItemList.Add(listItem);
    }

    List<QueryConditionItem> queryItemList = new List<QueryConditionItem>();
    queryItemList.Add(new QueryConditionItem() { ConditionDisplayName = "企业名称,地区范围,录入人员,最后修改人", ConditionFieldName = "CompanyName,AreaOther,CreateUserName,LastUpdateUserName", ConditionType = typeof(string) });
    queryItemList.Add(new QueryConditionItem() { ConditionDisplayName = "合作意向", ConditionFieldName = "EnterpriseLevel", ConditionType = typeof(CommonLevels), AddonData = "enumDisplayCategory:star" });
    queryItemList.Add(new QueryConditionItem() { ConditionDisplayName = "企业性质", ConditionFieldName = "BusinessType", ConditionType = typeof(EnterpriseTypes) });
    queryItemList.Add(new QueryConditionItem() { ConditionDisplayName = "企业状态", ConditionFieldName = "CanUsable", ConditionType = typeof(Logics) });
    queryItemList.Add(new QueryConditionItem() { ConditionDisplayName = "行业类型", ConditionFieldName = "IndustryKey", ConditionType = typeof(string), ConditionValueItems = industryTypeItemList });
    queryItemList.Add(new QueryConditionItem() { ConditionDisplayName = "所在地区", ConditionFieldName = "AreaCode", ConditionType = typeof(string), ConditionValueItems = areaItemList });
}

<h2>企业列表</h2>
<div id="ItemListDIV">
    <div>
        @using (Html.BeginForm())
        {
            @Html.HiQuery("QueryControl").QueryConditionList(queryItemList).IsDisplayBrackets(false).Render()
        }
    </div>
    <div class="OperateArea" id="OperateAreaContainer">
        <div class="btn-group">@Html.HiA("newDisplayA").CssClassName("modalInput btn btn-warning").Value("<i class=\"icon-check icon-white\"></i>新建").ACA("Item", "Enterprise").Render(new { rel = "#EditDIV" }) </div>
    </div>
    <div class="dataContainer">
        <table class="grid">
            <tr>
                <th style="width: 180px">操作
                </th>
                <th style="width: 220px">企业名称
                </th>
                <th style="width: 80px">联系人员名称
                </th>
                <th style="width: 30px">状态
                </th>
                <th>联系地址
                </th>
            </tr>
            @foreach (EnterpriseEntity entity in Model)
            {
                string entityGuid = entity.EnterpriseGuid.ToString();
                <tr>
                    <td>
                        @Html.HiA().CssClassName("modalInput edit " + @entityGuid).Value("<i class=\"icon-edit\"></i>编辑").ACA("Item", "Enterprise").Render(new { rel = "#EditDIV", itemKey = @entity.EnterpriseGuid }) | 
                        @Html.HiA().CssClassName("user").Value("<i class=\"icon-user\"></i>用户").ACA("UserList", "Enterprise").RouteValue(new { itemKey = @entity.EnterpriseGuid, itemName = @entity.CompanyName, returnUrl = currentUrl, isUsingCompress = isUsingCompress }).Render() | 
                        @Html.HiA().CssClassName("service").Value("<i class=\"icon-random\"></i>合作方式").ACA("ServiceList", "Enterprise").RouteValue(new { itemKey = @entity.EnterpriseGuid, itemName = @entity.CompanyName, returnUrl = currentUrl, isUsingCompress = isUsingCompress }).Render()
                    </td>
                    <td>@entity.CompanyName
                    </td>
                    <td>@entity.ContactPerson
                    </td>
                    <td>@EnumHelper.GetDisplayValue(entity.CanUsable)
                    </td>
                    <td>@entity.PrincipleAddress
                    </td>
                </tr>   
            }
        </table>
    </div>
    <div class="myPager">
        <span style="float: left;">@Html.Pager(Model, new PagerOptions() { PageIndexParameterName = "id", ShowDisabledPagerItems = false, AlwaysShowFirstLastPageNumber = true }) </span>
        &nbsp;(共<span>@Model.TotalItemCount</span>条/每页<span>@SystemConst.CountPerPage</span>条 当前第<span>@Model.CurrentPageIndex</span> 页/共<span>@Model.TotalPageCount</span>页)
    </div>
    <input type="hidden" id="currentPopupItemGuid" name="currentPopupItemGuid" value="" />
    <div class="modal modalFix" id="EditDIV">
    </div>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#aEnterpriseSection").click();
            $("#aEnterpriseSection").addClass("current");
            $("#aEnterpriseList").addClass("current");

            $(".modalInput").overlay({
                mask: {
                    color: '#ebecff',
                    loadSpeed: 200,
                    opacity: 0.9
                },
                closeOnClick: false
            });

            $("a.overlayClose").live("click", function () {
                var currentItemGuid = $("#currentPopupItemGuid").val();
                $(".modalInput").overlay().close();
                $(".modalInput.edit." + currentItemGuid).overlay().close();
            });

            $("#newDisplayA").click(function () {
                $(".modal").width("650px");
                var url = '@Url.Action("Item")' + '?keyGuid=&r=' + Math.random();
                $("#EditDIV").load(url);
            });

            $("a.edit").click(function () {
                $(".modal").width("650px");
                var itemKey = $(this).attr("itemKey");
                $("#currentPopupItemGuid").val(itemKey);
                var url = '@Url.Action("Item")' + '?keyGuid=' + itemKey + '&r=' + Math.random();
                $("#EditDIV").load(url);
            });
        });
    </script>
</div>
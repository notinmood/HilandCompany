@using Webdiyer.WebControls.Mvc;
@using HiLand.General.Entity;
@using HiLand.Utility4.MVC;
@using HiLand.General;
@using HiLand.Utility4.MVC.Data;
@using HiLand.Utility4.MVC.Controls;
@using HiLand.Framework.BusinessCore;
@using HiLand.Framework4.Permission.Controls;
@using HiLand.Utility.Data;
@using XQYC.Business.Entity;
@using XQYC.Web.Models;

@model PagedList<LaborEntity>
@{
    ViewBag.Title = "Index";
    string currentUrl = HiLand.Utility.Web.RequestHelper.CurrentFullUrl;
    bool isUsingCompress = false;
    if (currentUrl.Length > 512)
    {
        isUsingCompress = true;
        currentUrl = CompressHelper.Compress(currentUrl);
    }

    List<QueryConditionItem> queryItemList = new List<QueryConditionItem>();
    queryItemList.Add(new QueryConditionItem() { ConditionDisplayName = "所属企业,人员名称,身份证号", ConditionFieldName = "CurrentEnterpriseName,UserNameCN,UserCardID", ConditionType = typeof(string) });
    queryItemList.Add(new QueryConditionItem() { ConditionDisplayName = "人员性别", ConditionFieldName = "UserSex", ConditionType = typeof(HiLand.Utility.Enums.Sexes) });
    queryItemList.Add(new QueryConditionItem() { ConditionDisplayName = "工作状态", ConditionFieldName = "LaborWorkStatus", ConditionType = typeof(XQYC.Business.Enums.LaborWorkStatuses) });
    queryItemList.Add(new QueryConditionItem() { ConditionDisplayName = "信息提供人,推荐人员,服务人员,财务人员,业务人员,安置人员", ConditionFieldName = "ProviderUserName,RecommendUserName,ServiceUserName,FinanceUserName,BusinessUserName,SettleUserName", ConditionType = typeof(string) });
    queryItemList.Add(new QueryConditionItem() { ConditionDisplayName = "录入时间", ConditionFieldName = "UserRegisterDate", ConditionType = typeof(DateTime) });
    queryItemList.Add(new QueryConditionItem() { ConditionDisplayName = "录入时间", ConditionFieldName = "UserRegisterDate", ConditionType = typeof(DateTime) });
}

<h2>劳务人员列表</h2>
<div id="ItemListDIV">
    <div>
        @using (Html.BeginForm())
        {
            @Html.HiQuery("LaborQuery").QueryConditionList(queryItemList).IsDisplayBrackets(false).Render()
        }
    </div>
    <div class="OperateArea" id="OperateAreaContainer">
        <div class="btn-group">
            @Html.HiA("newDisplayA").CssClassName("modalInput btn btn-warning").Value("<i class=\"icon-check icon-white\"></i>新建").ACA("Item", "Labor").Render(new { rel = "#EditDIV" })  
            @Html.HiA("batchSettleWork").CssClassName("modalInput btn btn-warning").Value("<i class=\"icon-list icon-white\"></i>批量派工").ACA("BatchSettleWork", "Labor").Render(new { rel = "#EditDIV" })
            @Html.HiA("batchSettleCost").CssClassName("modalInput btn btn-warning").Value("<i class=\"icon-th-list icon-white\"></i>费用模式设置").ACA("BatchSettleCost", "Labor").Render(new { rel = "#EditDIV" })
            @XQYC.Web.Control.HtmlHelperEx.ExportExcel(Html)
        </div>
    </div>
    <div class="dataContainer">
        <table style="width: 3700px" class="grid">
            <tr>
                <th style="width: 250px">
                    <input type="checkbox" class="allCheckboxSelector" />操作
                </th>
                <th style="width: 80px">身份证
                </th>
                <th style="width: 80px">人员名称
                </th>
                <th style="width: 80px">人员状态
                </th>
                <th style="width: 80px">工作状态
                </th>
                <th style="width: 180px">务工企业
                </th>
                <th style="width: 80px">所在部门
                </th>
                <th style="width: 80px">所在车间
                </th>
                <th style="width: 80px">职工编号
                </th>
                <th style="width: 180px">银行账户
                </th>
                <th style="width: 100px">社保号
                </th>
                <th style="width: 80px">户口性质
                </th>
                <th style="width: 50px">性别
                </th>
                <th style="width: 50px">年龄
                </th>
                <th style="width: 80px">出生日期
                </th>
                <th style="width: 80px">联系电话
                </th>
                <th style="width: 80px">紧急联系电话
                </th>
                <th style="width: 80px">学历
                </th>
                <th style="width: 180px">毕业学校
                </th>
                <th style="width: 100px">最近合同开始时间
                </th>
                <th style="width: 100px">最近合同到期时间
                </th>
                <th style="width: 100px">最近离职时间
                </th>
                <th style="width: 80px">信息员
                </th>
                <th style="width: 80px">信息提供人员
                </th>
                <th style="width: 80px">推荐人员
                </th>
                <th style="width: 80px">财务人员
                </th>
                <th style="width: 80px">业务人员
                </th>
                <th style="width: 80px">安置人员
                </th>
                <th style="width: 80px">客服人员
                </th>
                <th style="width: 80px">备注1
                </th>
                <th style="width: 80px">备注2
                </th>
                <th style="width: 80px">备注3
                </th>
                <th style="width: 80px">备注4
                </th>
                <th>备注5
                </th>
            </tr>
            @foreach (LaborEntity entity in Model)
            {
                string entityGuid = entity.UserGuid.ToString();
                <tr>
                    <td>
                        <input type="checkbox" name="itemCheckboxSelector" class="checkboxSelector" value="@entityGuid"   />
                        @Html.HiA().CssClassName("modalInput edit " + @entityGuid).Value("<i class=\"icon-edit\"></i>编辑").ACA("Item", "Labor").Render(new { rel = "#EditDIV", itemKey = @entity.UserGuid }) | 
                    @Html.HiA().CssClassName("modalInput password " + @entityGuid).Value("<i class=\"icon-asterisk\"></i>口令").ACA("Password", "Labor").Render(new { rel = "#EditDIV", itemKey = @entity.UserGuid }) |
                    @Html.HiA().CssClassName("contract").Value("<i class=\"icon-file\"></i>合同").ACA("ContractList", "Labor").RouteValue(new { itemKey = @entity.UserGuid, returnUrl = currentUrl, isUsingCompress = isUsingCompress }).Render() |
                    @Html.HiA().CssClassName("bankCard").Value("<i class=\"icon-retweet\"></i>银行账户").ACA("BankCardList", "Labor").RouteValue(new { itemKey = @entity.UserGuid, returnUrl = currentUrl, isUsingCompress = isUsingCompress }).Render()
                    </td>
                    <td>@entity.UserCardID
                    </td>
                    <td>@entity.UserNameCN
                    </td>
                    <td>@EnumHelper.GetDisplayValue(entity.UserStatus)
                    </td>
                    <td>@EnumHelper.GetDisplayValue(entity.LaborWorkStatus)
                    </td>
                    <td>@entity.CurrentEnterpriseName
                    </td>
                    <td>@entity.CurrentLaborDepartment
                    </td>
                    <td>@entity.CurrentLaborWorkShop
                    </td>
                    <td>@entity.LaborCode
                    </td>
                    <td>@entity.CurrentBank.AccountNumber
                    </td>
                    <td>@entity.SocialSecurityNumber
                    </td>
                    <td>@EnumHelper.GetDisplayValue(entity.HouseHoldType)
                    </td>
                    <td>@EnumHelper.GetDisplayValue(entity.UserSex)
                    </td>
                    <td>@entity.UserAge
                    </td>
                    <td>@DateTimeHelper.ToSaftShortDateString(entity.UserBirthDay)
                    </td>
                    <td>@entity.UserMobileNO
                    </td>
                    <td>@entity.UrgentTelephone
                    </td>
                    <td>@EnumHelper.GetDisplayValue(entity.UserEducationalBackground)
                    </td>
                    <td>@entity.UserEducationalSchool
                    </td>
                    <td>@DateTimeHelper.ToSaftShortDateString(entity.CurrentContractStartDate)
                    </td>
                    <td>@DateTimeHelper.ToSaftShortDateString(entity.CurrentContractStopDate)
                    </td>
                    <td>@DateTimeHelper.ToSaftShortDateString(entity.CurrentContractDiscontinueDate)
                    </td>
                    <td>@entity.InformationBrokerUserName
                    </td>
                    <td>@entity.ProviderUserName
                    </td>
                    <td>@entity.RecommendUserName
                    </td>
                    <td>@entity.FinanceUserName
                    </td>
                    <td>@entity.BusinessUserName
                    </td>
                    <td>@entity.SettleUserName
                    </td>
                    <td>@entity.ServiceUserName
                    </td>
                    <td>@entity.Memo1
                    </td>
                    <td>@entity.Memo2
                    </td>
                    <td>@entity.Memo3
                    </td>
                    <td>@entity.Memo4
                    </td>
                    <td>@entity.Memo5
                    </td>
                </tr>   
            }
        </table>
    </div>
    <div class="myPager">
        <span style="float: left;">@Html.Pager(Model, new PagerOptions() { PageIndexParameterName = "id", ShowDisabledPagerItems = false, AlwaysShowFirstLastPageNumber = true }) </span>
        &nbsp;(共<span>@Model.TotalItemCount</span>条/每页<span>@SystemConst.CountPerPageForLaborList</span>条 当前第<span>@Model.CurrentPageIndex</span> 页/共<span>@Model.TotalPageCount</span>页)
    </div>
    <input type="hidden" id="currentPopupItemGuid" name="currentPopupItemGuid" value="" />
    <div class="modal modalFix" id="EditDIV">
    </div>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#aLaborBasicSection").click();
            $("#aLaborBasicSection").addClass("current");
            $("#aLaborList").addClass("current");

            $(".modalInput").overlay({
                mask: {
                    color: '#ebecff',
                    loadSpeed: 200,
                    opacity: 0.9
                },
                closeOnClick: false
            });

            $("a.overlayClose").live("click", function () {
                window.location.reload();
            });

            $("#newDisplayA").click(function () {
                $(".modal").width("650px");
                var itemKey = "";
                var url = '@Url.Action("Item")' + '?r=' + Math.random() + '&itemKey=' + itemKey + '&returnUrl=@currentUrl';
                $("#EditDIV").load(url);
            });

            $("#batchSettleWork").click(function () {
                $(".modal").width("350px");
                var itemKeys = JSON.stringify($("input:checked").map(function () { return $(this).val(); }).get(), null, null);
                $("#currentPopupItemGuid").val(itemKeys);
                var url = '@Url.Action("BatchSettleWork")' + '?r=' + Math.random() + '&itemKeys=' + itemKeys;
                $("#EditDIV").load(url);
            });

            $("#batchSettleCost").click(function () {
                $(".modal").width("350px");
                var itemKeys = JSON.stringify($("input:checked").map(function () { return $(this).val(); }).get(), null, null);
                $("#currentPopupItemGuid").val(itemKeys);
                var url = '@Url.Action("BatchSettleCost")' + '?r=' + Math.random() + '&itemKeys=' + itemKeys;
                $("#EditDIV").load(url);
            });

            $("a.edit").click(function () {
                $(".modal").width("650px");
                var itemKey = $(this).attr("itemKey");
                $("#currentPopupItemGuid").val(itemKey);
                var url = '@Url.Action("Item")' + '?r=' + Math.random() + '&itemKey=' + itemKey + '&returnUrl=@currentUrl';
                $("#EditDIV").load(url);
            });

            $("a.password").click(function () {
                $(".modal").width("350px");
                var itemKey = $(this).attr("itemKey");
                $("#currentPopupItemGuid").val(itemKey);
                var url = '@Url.Action("Password")' + '?r=' + Math.random() + '&itemKey=' + itemKey;
                $("#EditDIV").load(url);
            });

            $(".allCheckboxSelector").click(function () {
                var selectedStatus = $(this).attr("checked");
                $(":checkbox", $(this).parents("table")).attr("checked", selectedStatus);
            });
        });
    </script>
</div>




@using Webdiyer.WebControls.Mvc;
@using HiLand.General.Entity;
@using HiLand.Utility4.MVC;
@using HiLand.General;
@using HiLand.Utility4.MVC.Data;
@using HiLand.Utility4.MVC.Controls;
@using HiLand.Framework.BusinessCore;
@using HiLand.Framework4.Permission.Controls;
@using HiLand.Utility.Data;
@using XQYC.Business.Entity;
@using XQYC.Web.Models;
@using HiLand.Utility.Web;
@using HiLand.General.BLL;
@using System.Web.UI.WebControls;

@model PagedList<SalarySummaryEntity>
@{
    ViewBag.Title = "Index";
    string currentUrl = RequestHelper.CurrentFullUrl;
    string enterpriseKey = RequestHelper.GetValue("enterpriseKey");
    string salaryMonth = RequestHelper.GetValue("SalaryMonth");

    string enterpriseName = string.Empty;
    if (GuidHelper.IsInvalidOrEmpty(enterpriseKey) == false)
    {
        enterpriseName = EnterpriseBLL.Instance.Get(enterpriseKey).CompanyNameShort;
    }

    List<ListItem> listItems = new List<ListItem>();

    List<QueryConditionItem> queryItemList = new List<QueryConditionItem>();
    queryItemList.Add(new QueryConditionItem() { ConditionDisplayName = "人员名称", ConditionFieldName = "LaborName", ConditionType = typeof(string), ConditionValueItems = listItems });
    queryItemList.Add(new QueryConditionItem() { ConditionDisplayName = "工号", ConditionFieldName = "LaborCode", ConditionType = typeof(string) });
    //queryItemList.Add(new QueryConditionItem() { ConditionDisplayName = "个人公积金", ConditionFieldName = "LaborCode", ConditionType = typeof(string) });
}

<h2>@string.Format("劳务人员薪资列表-({0}-{1})", enterpriseName, salaryMonth)</h2>
<div id="ItemListDIV">
    <div>
        @using (Html.BeginForm())
        {
            @Html.HiQuery("LaborQuery").QueryConditionList(queryItemList).IsDisplayBrackets(false).Render()
        }
    </div>
    <div class="OperateArea" id="OperateAreaContainer">
        <div class="btn-group">
            @Html.HiA("newDisplayA").CssClassName("modalInput btn btn-warning").Value("<i class=\"icon-check icon-white\"></i>新建").ACA("SalaryItem", "Labor").Render(new { rel = "#EditDIV" })
            @Html.HiA("salaryListCheck").CssClassName("modalInput btn btn-warning").Value("<i class=\"icon-refresh icon-white\"></i>应付薪资人员校验").ACA("SalaryListCheck", "Labor").RouteValue(new { enterpriseKey = enterpriseKey, salaryMonth = salaryMonth }).Render(new { rel = "#EditDIV" })
            @XQYC.Web.Control.HtmlHelperEx.ExportExcel(Html)
        </div>
    </div>
    <div id="MyTable_tableLayout">
        <div id="MyTable_tableFix">
            <table id="MyTable_tableFixClone" border="1" cellspacing="0" cellpadding="0"></table>
        </div>
        <div id="MyTable_tableHead">
            <table id="MyTable_tableHeadClone" border="1" cellspacing="0" cellpadding="0"></table>
        </div>
        <div id="MyTable_tableColumn">
            <table id="MyTable_tableColumnClone" border="1" cellspacing="0" cellpadding="0"></table>
        </div>
        <div id="MyTable_tableData">
            <table id="MyTable" style="width: 3500px" class="grid" border="1" cellspacing="0" cellpadding="0">
                <thead>
                    <tr>
                        <th style="width: 120px">操作
                        </th>
                        <th style="width: 60px">姓名
                        </th>
                        <th style="width: 80px">工号
                        </th>
                        <th style="width: 60px">账期
                        </th>
                        <th style="width: 80px">校验状态
                        </th>
                        <th style="width: 120px">银行账号
                        </th>
                        <th style="width: 80px">应付工资
                        </th>
                        <th style="width: 140px">企业综合费用(实收)
                        </th>
                        <th style="width: 140px">企业综合费用(计算)
                        </th>
                        <th style="width: 140px">企业保险(实收)
                        </th>
                        <th style="width: 140px">企业保险(计算)
                        </th>
                        <th style="width: 140px">企业公积金(实收)
                        </th>
                        <th style="width: 140px">企业公积金(计算)
                        </th>
                        <th style="width: 140px">企业管理费(实收)
                        </th>
                        <th style="width: 140px">企业管理费(计算)
                        </th>
                        <th style="width: 140px">个人保险费用(实扣)
                        </th>
                        <th style="width: 140px">个人保险费用(计算)
                        </th>
                        <th style="width: 140px">个人公积金(实扣)
                        </th>
                        <th style="width: 140px">个人公积金(计算)
                        </th>
                        <th style="width: 120px">补扣个人保险
                        </th>
                        <th style="width: 80px">应税工资
                        </th>
                        <th style="width: 80px">工资税
                        </th>
                        <th style="width: 80px">各种扣费
                        </th>
                        <th style="width: 140px">扣其他(借款等)
                        </th>
                        <th>实付工资
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (SalarySummaryEntity entity in Model)
                    {
                        string entityGuid = entity.SalarySummaryGuid.ToString();
                        decimal salaryGrossPay = entity.SalaryGrossPay;
                        decimal salaryrebate = entity.SalaryRebate;

                        bool isCheckOk = true;
                        if (entity.EnterpriseManageFeeCalculated != entity.EnterpriseManageFeeReal)
                        {
                            isCheckOk = false;
                        }

                        if (entity.EnterpriseInsuranceCalculated != entity.EnterpriseInsuranceReal)
                        {
                            isCheckOk = false;
                        }

                        if (entity.EnterpriseMixCostCalculated != entity.EnterpriseMixCostReal)
                        {
                            isCheckOk = false;
                        }

                        if (entity.EnterpriseReserveFundCalculated != entity.EnterpriseReserveFundReal)
                        {
                            isCheckOk = false;
                        }

                        if (entity.PersonInsuranceCalculated != entity.PersonInsuranceReal)
                        {
                            isCheckOk = false;
                        }

                        if (entity.PersonReserveFundCalculated != entity.PersonReserveFundReal)
                        {
                            isCheckOk = false;
                        }
                        
                        <tr>
                            <td>
                                @Html.HiA().CssClassName("salaryDetailsList").Value("<i class=\"icon-align-justify\"></i>详情").ACA("SalaryDetailsList", "Labor").RouteValue(new { itemKey = entity.SalarySummaryGuid, returnUrl = currentUrl }).Render()
                                @Html.HiA().CssClassName("modalInput salaryCalculateFix " + @entityGuid).Value("<i class=\"icon-pencil\"></i>修正").ACA("SalaryCalculateFix", "Labor").Render(new { rel = "#EditDIV", itemKey = entity.SalarySummaryGuid })
                            </td>
                            <td>@entity.LaborName
                            </td>
                            <td>
                                @entity.LaborCode
                            </td>
                            <td>
                                @entity.SalaryDate.ToString("yyyyMM")
                            </td>
                            <td>
                                @if (isCheckOk == true)
                                { 
                                <span class="checkSpan">通过</span>
                                }
                                else
                                {
                                <span class="checkSpan">未通过</span>
                                }
                            </td>
                            <td>@entity.Labor.CurrentBankAccountNumber
                            </td>
                            <td>@entity.SalaryNeedPayBeforeCost.ToString("0.00")
                            </td>
                            <td>@entity.EnterpriseMixCostReal.ToString("0.00")
                            </td>
                            <td>@entity.EnterpriseMixCostCalculated.ToString("0.00")
                            </td>
                            <td>@entity.EnterpriseInsuranceReal.ToString("0.00")
                            </td>
                            <td>@entity.EnterpriseInsuranceCalculated.ToString("0.00")
                            </td>
                            <td>@entity.EnterpriseReserveFundReal.ToString("0.00")
                            </td>
                            <td>@entity.EnterpriseReserveFundCalculated.ToString("0.00")
                            </td>
                            <td>@entity.EnterpriseManageFeeReal.ToString("0.00")
                            </td>
                            <td>@entity.EnterpriseManageFeeCalculated.ToString("0.00")
                            </td>
                            <td>@entity.PersonInsuranceReal.ToString("0.00")
                            </td>
                            <td>@entity.PersonInsuranceCalculated.ToString("0.00")
                            </td>
                            <td>@entity.PersonReserveFundReal.ToString("0.00")
                            </td>
                            <td>@entity.PersonReserveFundCalculated.ToString("0.00")
                            </td>
                            <td>@entity.PersonOtherCostReal.ToString("0.00")
                            </td>
                            <td>@entity.SalaryNeedPayBeforeTax.ToString("0.00")
                            </td>
                            <td>@entity.SalaryTax.ToString("0.00")
                            </td>
                            <td>@salaryrebate.ToString("0.00")
                            </td>
                            <td>@entity.PersonBorrow.ToString("0.00")
                            </td>
                            <td>@entity.SalaryNeedPayToLabor.ToString("0.00")
                            </td>
                        </tr>   
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="myPager">
        <span style="float: left;">@Html.Pager(Model, new PagerOptions() { PageIndexParameterName = "id", ShowDisabledPagerItems = false, AlwaysShowFirstLastPageNumber = true }) </span>
        &nbsp;(共<span>@Model.TotalItemCount</span>条/每页<span>@SystemConst.CountPerPage</span>条 当前第<span>@Model.CurrentPageIndex</span> 页/共<span>@Model.TotalPageCount</span>页)
    </div>
    <input type="hidden" id="currentPopupItemGuid" name="currentPopupItemGuid" value="" />
    <div class="modal modalFix" id="EditDIV">
    </div>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#aLaborSalarySection").click();
            $("#aLaborSalarySection").addClass("current");
            $("#aSalaryList").addClass("current");

            $(".modalInput").overlay({
                mask: {
                    color: '#ebecff',
                    loadSpeed: 200,
                    opacity: 0.9
                },
                closeOnClick: false
            });

            $("a.overlayClose").live("click", function () {
                $(document).simulateKeyPress('27');
                var currentItemGuid = $("#currentPopupItemGuid").val();
                $(".modalInput").overlay().close();
                $(".modalInput.edit." + currentItemGuid).overlay().close();
                $(".modalInput.password." + currentItemGuid).overlay().close();
            });

            $("#newDisplayA").click(function () {
                var enterpriseKey = "@enterpriseKey";
                var salaryMonth = "@salaryMonth";
                var url = '@Url.Action("SalaryItem")' + '?r=' + Math.random() + '&enterpriseKey=' + enterpriseKey + '&salaryMonth=' + salaryMonth;
                $("#EditDIV").load(url);
            });

            $("#salaryListCheck").click(function () {
                var enterpriseKey = "@enterpriseKey";
                var salaryMonth = "@salaryMonth";
                var url = '@Url.Action("SalaryListCheck")' + '?r=' + Math.random() + '&enterpriseKey=' + enterpriseKey + '&salaryMonth=' + salaryMonth;
                $("#EditDIV").load(url);
            });

            $("a.salaryCalculateFix").click(function () {
                $(".modal").width("650px");
                var itemKey = $(this).attr("itemKey");
                $("#currentPopupItemGuid").val(itemKey);
                var url = $.UrlUtil('@Url.Action("salaryCalculateFix")').concat("itemKey", itemKey).show(true);
                $("#EditDIV").load(url);
            });

            $(".checkSpan").each(function (i,element) {
                if ($(this).text() == "未通过")
                {
                    $(this).parents("tr").css({"backgroundColor":"#c00"});
                }
            });
        });
    </script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/fixTable.js")" ></script>
    <script type="text/javascript">
        fixTable("MyTable", 2, "100%", 400);
    </script>
</div>
